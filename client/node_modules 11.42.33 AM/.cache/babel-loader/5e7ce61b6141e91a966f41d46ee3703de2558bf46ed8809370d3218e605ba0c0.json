{"ast":null,"code":"var _jsxFileName = \"/Users/parth/Project/DailyServiceManagement-main/client/src/components/inventory/Inventory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Inventory() {\n  _s();\n  const [inventory, setInventory] = useState([]);\n  const [order, setOrder] = useState({\n    milk: 0,\n    cheese: 0,\n    yogurt: 0\n  });\n  const [updatedInventory, setUpdatedInventory] = useState([]);\n  useEffect(() => {\n    // fetch inventory from backend\n    axios.get('/api/inventory').then(res => setInventory(res.data)).catch(err => console.log(err));\n  }, []);\n  useEffect(() => {\n    // calculate updated inventory based on customer order\n    const updatedInv = inventory.map(item => {\n      if (item.name === 'Milk') {\n        return {\n          ...item,\n          quantity: item.quantity - order.milk\n        };\n      } else if (item.name === 'Cheese') {\n        return {\n          ...item,\n          quantity: item.quantity - order.cheese\n        };\n      } else if (item.name === 'Yogurt') {\n        return {\n          ...item,\n          quantity: item.quantity - order.yogurt\n        };\n      } else {\n        return item;\n      }\n    });\n    setUpdatedInventory(updatedInv);\n  }, [inventory, order]);\n  const handleOrder = () => {\n    // update inventory in backend\n    axios.post('/api/inventory', updatedInventory).then(res => console.log(res)).catch(err => console.log(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Inventory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: updatedInventory.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Place Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"milk\",\n        children: \"Milk:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"milk\",\n        name: \"milk\",\n        min: \"0\",\n        max: inventory.find(item => item.name === 'Milk').quantity,\n        value: order.milk,\n        onChange: e => setOrder({\n          ...order,\n          milk: Number(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"cheese\",\n        children: \"Cheese:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"cheese\",\n        name: \"cheese\",\n        min: \"0\",\n        max: inventory.find(item => item.name === 'Cheese').quantity,\n        value: order.cheese,\n        onChange: e => setOrder({\n          ...order,\n          cheese: Number(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"yogurt\",\n        children: \"Yogurt:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"yogurt\",\n        name: \"yogurt\",\n        min: \"0\",\n        max: inventory.find(item => item.name === 'Yogurt').quantity,\n        value: order.yogurt,\n        onChange: e => setOrder({\n          ...order,\n          yogurt: Number(e.target.value)\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleOrder,\n        children: \"Place Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(Inventory, \"DlSFYpDKghfgLO9Qb4psYYK+g9U=\");\n_c = Inventory;\nexport default Inventory;\nvar _c;\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Inventory","_s","inventory","setInventory","order","setOrder","milk","cheese","yogurt","updatedInventory","setUpdatedInventory","get","then","res","data","catch","err","console","log","updatedInv","map","item","name","quantity","handleOrder","post","children","fileName","_jsxFileName","lineNumber","columnNumber","id","htmlFor","type","min","max","find","value","onChange","e","Number","target","onClick","_c","$RefreshReg$"],"sources":["/Users/parth/Project/DailyServiceManagement-main/client/src/components/inventory/Inventory.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction Inventory() {\n  const [inventory, setInventory] = useState([]);\n  const [order, setOrder] = useState({\n    milk: 0,\n    cheese: 0,\n    yogurt: 0\n  });\n  const [updatedInventory, setUpdatedInventory] = useState([]);\n\n  useEffect(() => {\n    // fetch inventory from backend\n    axios.get('/api/inventory')\n      .then(res => setInventory(res.data))\n      .catch(err => console.log(err));\n  }, []);\n\n  useEffect(() => {\n    // calculate updated inventory based on customer order\n    const updatedInv = inventory.map(item => {\n      if (item.name === 'Milk') {\n        return {\n          ...item,\n          quantity: item.quantity - order.milk\n        };\n      } else if (item.name === 'Cheese') {\n        return {\n          ...item,\n          quantity: item.quantity - order.cheese\n        };\n      } else if (item.name === 'Yogurt') {\n        return {\n          ...item,\n          quantity: item.quantity - order.yogurt\n        };\n      } else {\n        return item;\n      }\n    });\n    setUpdatedInventory(updatedInv);\n  }, [inventory, order]);\n\n  const handleOrder = () => {\n    // update inventory in backend\n    axios.post('/api/inventory', updatedInventory)\n      .then(res => console.log(res))\n      .catch(err => console.log(err));\n  }\n\n  return (\n    <div>\n      <h2>Inventory</h2>\n      <table>\n        <thead>\n          <tr>\n            <th>Product</th>\n            <th>Quantity</th>\n          </tr>\n        </thead>\n        <tbody>\n          {updatedInventory.map(item => (\n            <tr key={item.id}>\n              <td>{item.name}</td>\n              <td>{item.quantity}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <br />\n      <h2>Place Order</h2>\n      <form>\n        <label htmlFor=\"milk\">Milk:</label>\n        <input type=\"number\" id=\"milk\" name=\"milk\" min=\"0\" max={inventory.find(item => item.name === 'Milk').quantity} value={order.milk} onChange={e => setOrder({ ...order, milk: Number(e.target.value) })} />\n        <br />\n        <label htmlFor=\"cheese\">Cheese:</label>\n        <input type=\"number\" id=\"cheese\" name=\"cheese\" min=\"0\" max={inventory.find(item => item.name === 'Cheese').quantity} value={order.cheese} onChange={e => setOrder({ ...order, cheese: Number(e.target.value) })} />\n        <br />\n        <label htmlFor=\"yogurt\">Yogurt:</label>\n        <input type=\"number\" id=\"yogurt\" name=\"yogurt\" min=\"0\" max={inventory.find(item => item.name === 'Yogurt').quantity} value={order.yogurt} onChange={e => setOrder({ ...order, yogurt: Number(e.target.value) })} />\n        <br />\n        <button type=\"button\" onClick={handleOrder}>Place Order</button>\n      </form>\n    </div>\n  );\n}\n\nexport default Inventory;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC;IACjCW,IAAI,EAAE,CAAC;IACPC,MAAM,EAAE,CAAC;IACTC,MAAM,EAAE;EACV,CAAC,CAAC;EACF,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACd;IACAC,KAAK,CAACc,GAAG,CAAC,gBAAgB,CAAC,CACxBC,IAAI,CAACC,GAAG,IAAIV,YAAY,CAACU,GAAG,CAACC,IAAI,CAAC,CAAC,CACnCC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAENpB,SAAS,CAAC,MAAM;IACd;IACA,MAAMuB,UAAU,GAAGjB,SAAS,CAACkB,GAAG,CAACC,IAAI,IAAI;MACvC,IAAIA,IAAI,CAACC,IAAI,KAAK,MAAM,EAAE;QACxB,OAAO;UACL,GAAGD,IAAI;UACPE,QAAQ,EAAEF,IAAI,CAACE,QAAQ,GAAGnB,KAAK,CAACE;QAClC,CAAC;MACH,CAAC,MAAM,IAAIe,IAAI,CAACC,IAAI,KAAK,QAAQ,EAAE;QACjC,OAAO;UACL,GAAGD,IAAI;UACPE,QAAQ,EAAEF,IAAI,CAACE,QAAQ,GAAGnB,KAAK,CAACG;QAClC,CAAC;MACH,CAAC,MAAM,IAAIc,IAAI,CAACC,IAAI,KAAK,QAAQ,EAAE;QACjC,OAAO;UACL,GAAGD,IAAI;UACPE,QAAQ,EAAEF,IAAI,CAACE,QAAQ,GAAGnB,KAAK,CAACI;QAClC,CAAC;MACH,CAAC,MAAM;QACL,OAAOa,IAAI;MACb;IACF,CAAC,CAAC;IACFX,mBAAmB,CAACS,UAAU,CAAC;EACjC,CAAC,EAAE,CAACjB,SAAS,EAAEE,KAAK,CAAC,CAAC;EAEtB,MAAMoB,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA3B,KAAK,CAAC4B,IAAI,CAAC,gBAAgB,EAAEhB,gBAAgB,CAAC,CAC3CG,IAAI,CAACC,GAAG,IAAII,OAAO,CAACC,GAAG,CAACL,GAAG,CAAC,CAAC,CAC7BE,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACnC,CAAC;EAED,oBACEjB,OAAA;IAAA2B,QAAA,gBACE3B,OAAA;MAAA2B,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAClB/B,OAAA;MAAA2B,QAAA,gBACE3B,OAAA;QAAA2B,QAAA,eACE3B,OAAA;UAAA2B,QAAA,gBACE3B,OAAA;YAAA2B,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK,eAChB/B,OAAA;YAAA2B,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAK;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACd;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACC,eACR/B,OAAA;QAAA2B,QAAA,EACGjB,gBAAgB,CAACW,GAAG,CAACC,IAAI,iBACxBtB,OAAA;UAAA2B,QAAA,gBACE3B,OAAA;YAAA2B,QAAA,EAAKL,IAAI,CAACC;UAAI;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,eACpB/B,OAAA;YAAA2B,QAAA,EAAKL,IAAI,CAACE;UAAQ;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM;QAAA,GAFjBT,IAAI,CAACU,EAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAIjB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF,eACR/B,OAAA;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACN/B,OAAA;MAAA2B,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACpB/B,OAAA;MAAA2B,QAAA,gBACE3B,OAAA;QAAOiC,OAAO,EAAC,MAAM;QAAAN,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACnC/B,OAAA;QAAOkC,IAAI,EAAC,QAAQ;QAACF,EAAE,EAAC,MAAM;QAACT,IAAI,EAAC,MAAM;QAACY,GAAG,EAAC,GAAG;QAACC,GAAG,EAAEjC,SAAS,CAACkC,IAAI,CAACf,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,MAAM,CAAC,CAACC,QAAS;QAACc,KAAK,EAAEjC,KAAK,CAACE,IAAK;QAACgC,QAAQ,EAAEC,CAAC,IAAIlC,QAAQ,CAAC;UAAE,GAAGD,KAAK;UAAEE,IAAI,EAAEkC,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK;QAAE,CAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACzM/B,OAAA;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACN/B,OAAA;QAAOiC,OAAO,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACvC/B,OAAA;QAAOkC,IAAI,EAAC,QAAQ;QAACF,EAAE,EAAC,QAAQ;QAACT,IAAI,EAAC,QAAQ;QAACY,GAAG,EAAC,GAAG;QAACC,GAAG,EAAEjC,SAAS,CAACkC,IAAI,CAACf,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,QAAQ,CAAC,CAACC,QAAS;QAACc,KAAK,EAAEjC,KAAK,CAACG,MAAO;QAAC+B,QAAQ,EAAEC,CAAC,IAAIlC,QAAQ,CAAC;UAAE,GAAGD,KAAK;UAAEG,MAAM,EAAEiC,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK;QAAE,CAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACnN/B,OAAA;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACN/B,OAAA;QAAOiC,OAAO,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAQ,eACvC/B,OAAA;QAAOkC,IAAI,EAAC,QAAQ;QAACF,EAAE,EAAC,QAAQ;QAACT,IAAI,EAAC,QAAQ;QAACY,GAAG,EAAC,GAAG;QAACC,GAAG,EAAEjC,SAAS,CAACkC,IAAI,CAACf,IAAI,IAAIA,IAAI,CAACC,IAAI,KAAK,QAAQ,CAAC,CAACC,QAAS;QAACc,KAAK,EAAEjC,KAAK,CAACI,MAAO;QAAC8B,QAAQ,EAAEC,CAAC,IAAIlC,QAAQ,CAAC;UAAE,GAAGD,KAAK;UAAEI,MAAM,EAAEgC,MAAM,CAACD,CAAC,CAACE,MAAM,CAACJ,KAAK;QAAE,CAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eACnN/B,OAAA;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eACN/B,OAAA;QAAQkC,IAAI,EAAC,QAAQ;QAACS,OAAO,EAAElB,WAAY;QAAAE,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEV;AAAC7B,EAAA,CAnFQD,SAAS;AAAA2C,EAAA,GAAT3C,SAAS;AAqFlB,eAAeA,SAAS;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}