{"ast":null,"code":"var _jsxFileName = \"/Users/parth/Project/DailyServiceManagement-main/client/src/components/forgotpassword/Changepass.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Changepass() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [password, setpassword] = useState();\n  const handlechange = e => {\n    // console.log(\"keyur\");\n    setpassword(e.target.value);\n    console.log(password);\n  };\n  const changepass = async e => {\n    const email = location.state.email;\n    e.preventDefault();\n    const res = await fetch(\"/changepassword\", {\n      method: \"Post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    const y = await res.json();\n    console.log(y);\n    navigate(\"/\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home-container\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        as: Row,\n        className: \"mb-3\",\n        controlId: \"formPlaintextPassword\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          column: true,\n          sm: \"2\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Enter New Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          sm: \"50\",\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            style: {\n              height: \"23px\"\n            },\n            type: \"password\",\n            onChange: handlechange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-secondary\",\n      style: {\n        backgroundColor: \"white\"\n      },\n      onClick: changepass,\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n_s(Changepass, \"BQEIRVPh9HOKfjbvio8glK/IFoU=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = Changepass;\nvar _c;\n$RefreshReg$(_c, \"Changepass\");","map":{"version":3,"names":["React","useState","Col","Form","Row","Button","useLocation","useNavigate","jsxDEV","_jsxDEV","Changepass","_s","location","navigate","password","setpassword","handlechange","e","target","value","console","log","changepass","email","state","preventDefault","res","fetch","method","headers","body","JSON","stringify","y","json","className","children","Group","as","controlId","Label","column","sm","fileName","_jsxFileName","lineNumber","columnNumber","Control","style","height","type","onChange","backgroundColor","onClick","_c","$RefreshReg$"],"sources":["/Users/parth/Project/DailyServiceManagement-main/client/src/components/forgotpassword/Changepass.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport Row from 'react-bootstrap/Row'; \nimport Button from 'react-bootstrap/Button';\nimport { useLocation, useNavigate } from 'react-router-dom';\nexport default function Changepass() {\n  const location = useLocation();\n  const navigate=useNavigate();\n    const [password,setpassword]=useState();\n    const handlechange=(e)=>{\n        // console.log(\"keyur\");\n        setpassword(e.target.value);\n        console.log(password);\n    };\n    const changepass=async(e)=>{\n      const email=location.state.email;\n        e.preventDefault();\n        const res=await fetch(\"/changepassword\",{\n          method:\"Post\",\n          headers: {\n              \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n              email,password\n          }),\n      });\n      const y=await res.json();\n      console.log(y);\n      \n      navigate(\"/\");\n    }\n    return (\n        <div className='home-container'>\n        <Form>\n        \n         <Form.Group as={Row} className=\"mb-3\" controlId=\"formPlaintextPassword\">\n        <Form.Label column sm=\"2\" >\n        <h2>Enter New Password</h2>\n        </Form.Label>\n        <Col sm=\"50\">\n          <Form.Control style={{height:\"23px\"}} type=\"password\" onChange={handlechange}  />\n        </Col>\n      </Form.Group>\n      <br/>\n      </Form>\n      <button className='btn btn-secondary' style={{backgroundColor:\"white\"}} onClick={changepass} type=\"submit\">\n        Submit\n      </button>\n    </div>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5D,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAMC,QAAQ,GAAGN,WAAW,EAAE;EAC9B,MAAMO,QAAQ,GAACN,WAAW,EAAE;EAC1B,MAAM,CAACO,QAAQ,EAACC,WAAW,CAAC,GAACd,QAAQ,EAAE;EACvC,MAAMe,YAAY,GAAEC,CAAC,IAAG;IACpB;IACAF,WAAW,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC3BC,OAAO,CAACC,GAAG,CAACP,QAAQ,CAAC;EACzB,CAAC;EACD,MAAMQ,UAAU,GAAC,MAAML,CAAC,IAAG;IACzB,MAAMM,KAAK,GAACX,QAAQ,CAACY,KAAK,CAACD,KAAK;IAC9BN,CAAC,CAACQ,cAAc,EAAE;IAClB,MAAMC,GAAG,GAAC,MAAMC,KAAK,CAAC,iBAAiB,EAAC;MACtCC,MAAM,EAAC,MAAM;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBT,KAAK;QAACT;MACV,CAAC;IACL,CAAC,CAAC;IACF,MAAMmB,CAAC,GAAC,MAAMP,GAAG,CAACQ,IAAI,EAAE;IACxBd,OAAO,CAACC,GAAG,CAACY,CAAC,CAAC;IAEdpB,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC;EACD,oBACIJ,OAAA;IAAK0B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC/B3B,OAAA,CAACN,IAAI;MAAAiC,QAAA,gBAEJ3B,OAAA,CAACN,IAAI,CAACkC,KAAK;QAACC,EAAE,EAAElC,GAAI;QAAC+B,SAAS,EAAC,MAAM;QAACI,SAAS,EAAC,uBAAuB;QAAAH,QAAA,gBACxE3B,OAAA,CAACN,IAAI,CAACqC,KAAK;UAACC,MAAM;UAACC,EAAE,EAAC,GAAG;UAAAN,QAAA,eACzB3B,OAAA;YAAA2B,QAAA,EAAI;UAAkB;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAK;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACd,eACbrC,OAAA,CAACP,GAAG;UAACwC,EAAE,EAAC,IAAI;UAAAN,QAAA,eACV3B,OAAA,CAACN,IAAI,CAAC4C,OAAO;YAACC,KAAK,EAAE;cAACC,MAAM,EAAC;YAAM,CAAE;YAACC,IAAI,EAAC,UAAU;YAACC,QAAQ,EAAEnC;UAAa;YAAA2B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAI;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC7E;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACK,eACbrC,OAAA;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACE,eACPrC,OAAA;MAAQ0B,SAAS,EAAC,mBAAmB;MAACa,KAAK,EAAE;QAACI,eAAe,EAAC;MAAO,CAAE;MAACC,OAAO,EAAE/B,UAAW;MAAC4B,IAAI,EAAC,QAAQ;MAAAd,QAAA,EAAC;IAE3G;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV;AAACnC,EAAA,CA7CuBD,UAAU;EAAA,QACfJ,WAAW,EACbC,WAAW;AAAA;AAAA+C,EAAA,GAFJ5C,UAAU;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}